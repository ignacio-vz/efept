@implements IDisposable

@inject NavigationManager NavigationManager

<div class="contenedor-logo">
    <img src="images/logo_blanco.webp" alt="logo" loading="eager">
</div>
<button @onclick="ToggleMenu" id="hamburger-menu" class="hamburger-menu">☰</button>
<div class="contenedor-navbar-ul">
    <ul class="navbar-ul-desktop">
        <li>Este blog</li>
        <li>Sobre mí</li>
        <li>Contacto</li>
        <li>Recursos</li>
    </ul>
    <ul class="navbar-ul-mobile" style="@EstiloMenu">
        <li>Este blog</li>
        <li>Sobre mí</li>
        <li>Contacto</li>
        <li>Recursos</li>
    </ul>
</div>


@code {
    private string? currentUrl;
    private bool MenuVisible = false;
    private string EstiloMenu => MenuVisible ? "display: flex;" : "display: none;";

    private void ToggleMenu()
    {
        MenuVisible = !MenuVisible;
    }

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}